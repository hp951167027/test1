<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">  
  
  
    <!-- sessionFactory 配置 -->  
    <bean id="sessionFactory"  
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
        <!-- dataSource的属性会在applicationContext.xml文件中配置，在这里先引用 -->  
        <property name="dataSource" ref="dataSource"></property>  
        <!-- 设置hibernate相关的配置项 -->  
        <property name="hibernateProperties">  
            <!-- props标签是为了注入Properties这个类型的属性 -->  
            <!-- key必须加上hibernate.前缀 -->  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>  
                <!-- show_sql目的是打印sql语句 -->  
                <prop key="hibernate.show_sql">true</prop>  
                <!-- 美化SQL的打印格式 -->  
                <prop key="hibernate.format_sql">true</prop>  
                <!-- a) create-drop：在执行程序的时候创建数据表，在执行完了之后删除表,实际开发中，常用于测试   
                     b) create：在每次执行程序的时候重新创建数据表   
                    c) update：在执行程序的时候会判断，如果存在，不创建表，否则创建数据表，并且会根据实体类中的属性的增加，而自动增加数据表中的字段（开发环境）   
                    d) validate：在执行程序的时候会判断，如果实体类中的属性与表中的字段不一致，那么就报错（生产环境）  
                <prop key="hibernate.hbm2ddl.auto">validate</prop>  --> 
            </props>  
        </property>  
  
        <!-- 配置hibernate的实体类 -->  
        <property name="packagesToScan">  
            <!--list标签是用来注入String[]类型的属性 ,其值一般是对应的bean包的全限名，而bean包中的类一般又是与数据库中的表对应-->  
            <list>  
                <value>bean</value>  
            </list>  
        </property>  
    </bean>  
  
    <!-- 配置 hibernateTemplate模板 -->  
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  
  
</beans> 